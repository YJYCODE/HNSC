GCGC_anno <- as.data.frame(fread(annotation_file,header = T,sep = "\t"))
noGCGC_anno <- as.data.frame(fread(anno_file_noGCGC,header = T,sep = "\t"))
View(GCGC_anno)
View(diff_data)
GCGC_probe <- diff_data[diff_data$GCGC_tag=="GCGC",1]
GCGC_tmp1 <- GCGC_anno[GCGC_anno$id%in%GCGC_probe,1:4]
View(GCGC_tmp1)
View(GCGC_tmp1)
GCGC_tmp1$chr <- paste0("chr",GCGC_tmp1$chr)
View(GCGC_tmp1)
write.table(GCGC_tmp1,file = "4-GSE-GCGC.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
write.table(GCGC_tmp1,file = "5-GSE-GCGC.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
file <- "5-GSE-GCGC.txt"
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp <- as.data.frame(Anno@anno)
View(tmp)
library(openxlsx)
library(data.table)
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\tissue_GSE131013_450K\\"
setwd(path)
beta <- as.data.frame(fread("3-beta_use_all_final.txt",header = T,sep = "\t"))
diff_data <- as.data.frame(fread("3-diff_data_use_all_final.txt",
header = T,sep = "\t"))
annotation_file <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\450k_annotation\\450k.GCGC.primer_tag.txt"
anno_file_noGCGC <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\450k_annotation\\450k.noGCGC.primer_tag.txt"
GCGC_anno <- as.data.frame(fread(annotation_file,header = T,sep = "\t"))
noGCGC_anno <- as.data.frame(fread(anno_file_noGCGC,header = T,sep = "\t"))
GCGC_probe <- diff_data[diff_data$GCGC_tag=="GCGC",1]
GCGC_tmp1 <- GCGC_anno[GCGC_anno$id%in%GCGC_probe,1:4]
GCGC_tmp1$chr <- paste0("chr",GCGC_tmp1$chr)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
file <- "5-GSE-GCGC.txt" ## 文件必须为txt后缀,染色体必须加chr
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp <- as.data.frame(Anno@anno)
View(tmp)
library(openxlsx)
path <- "E:/0-泛生子/工作/结直肠癌早筛/Data_Analysis/DNA_methylation/maker_re_select/public_final_marker"
setwd(path)
data_marker <- read.xlsx("methy_marker_final_add_cnv_annotation_20210331.xlsx",
sheet = 2)
View(data_marker)
library(openxlsx)
path <- "E:/0-泛生子/工作/结直肠癌早筛/Data_Analysis/DNA_methylation/maker_re_select/public_final_marker"
setwd(path)
data_marker <- read.xlsx("20210407-public_data_marker.xlsx",sheet = 1)
View(data_marker)
View(data_marker)
library(openxlsx)
path <- "E:/0-泛生子/工作/结直肠癌早筛/Data_Analysis/DNA_methylation/maker_re_select/public_final_marker"
setwd(path)
data_marker <- read.xlsx("20210407-public_data_marker.xlsx",sheet = 1)
View(data_marker)
tmp <- data_marker[,c(7:9,2)]
View(tmp)
tmp$target_chr <- paste0("chr",tmp$target_chr)
write.table(tmp,file = "20210407-public_data_marker_bed.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
file <- "20210407-public_data_marker_bed.txt"
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp <- as.data.frame(Anno@anno)
View(tmp)
colnames(tmp) <- c("chr","start","end","select_probe")
View(tmp)
tmp <- data_marker[,c(7:9,2)]
tmp$target_chr <- paste0("chr",tmp$target_chr)
colnames(tmp) <- c("chr","start","end","select_probe")
View(tmp)
write.table(tmp,file = "20210407-public_data_marker_bed.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
file <- "20210407-public_data_marker_bed.txt"
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp_anno <- as.data.frame(Anno@anno)
View(tmp_anno)
View(tmp)
View(tmp)
BiocManager::install("ChIPseeker")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
file <- "hg19.GCGC_byMF_new.txt"
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp_anno <- as.data.frame(Anno@anno)
View(tmp_anno)
write.table(tmp_anno,file = "hg19.GCGC_byMF_gene_anno.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(openxlsx)
library(data.table)
path_GSE <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\tissue_GSE131013_450K\\"
path_TCGA <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\tissue_TCGA_450K\\"
path_TCGA_blood <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\blood_N_TCGA_T\\"
path_GSE_blood <- "E:/0-泛生子/工作/结直肠癌早筛/Data_Analysis/DNA_methylation/maker_re_select/public_data/blood_N_GSE_T/"
annotation_file <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\450k_annotation\\450k.GCGC.primer_tag.txt"
anno_file_noGCGC <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\450k_annotation\\450k.noGCGC.primer_tag.txt"
GCGC_anno <- as.data.frame(fread(annotation_file,header = T,sep = "\t"))
noGCGC_anno <- as.data.frame(fread(anno_file_noGCGC,header = T,sep = "\t"))
data1 <- as.data.frame(fread(paste0(path_GSE"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
data2 <- as.data.frame(fread(paste0(path_TCGA,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
data3 <- as.data.frame(fread(paste0(path_GSE_blood,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
data4 <- as.data.frame(fread(paste0(path_TCGA_blood,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
data1 <- as.data.frame(fread(paste0(path_GSE,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
GCGC_probe_GSE <- data1[data1$GCGC_tag=="GCGC",1]
GCGC_probe_TCGA <- data2[data2$GCGC_tag=="GCGC",1]
GCGC_probe_GSE_blood <- data3[data3$GCGC_tag=="GCGC",1]
GCGC_probe_TCGA <- data4[data4$GCGC_tag=="GCGC",1]
GCGC_probe_GSE <- as.data.frame(data1[data1$GCGC_tag=="GCGC",1])
View(GCGC_probe_GSE)
GCGC_probe_TCGA <- as.data.frame(data2[data2$GCGC_tag=="GCGC",1])
GCGC_probe_TCGA$tag <- rep("TCGA",nrow(GCGC_probe_TCGA))
GCGC_probe_GSE_blood <- as.data.frame(data3[data3$GCGC_tag=="GCGC",1])
GCGC_probe_TCGA <- as.data.frame(data4[data4$GCGC_tag=="GCGC",1])
GCGC_probe_GSE <- as.data.frame(data1[data1$GCGC_tag=="GCGC",1])
GCGC_probe_GSE$tag <- rep("GSE",nrow(GCGC_probe_GSE))
GCGC_probe_TCGA <- as.data.frame(data2[data2$GCGC_tag=="GCGC",1])
GCGC_probe_TCGA$tag <- rep("TCGA",nrow(GCGC_probe_TCGA))
GCGC_probe_GSE_blood <- as.data.frame(data3[data3$GCGC_tag=="GCGC",1])
GCGC_probe_GSE_blood$tag <- rep("GSE_blood",nrow(GCGC_probe_GSE_blood))
GCGC_probe_TCGA_blood <- as.data.frame(data4[data4$GCGC_tag=="GCGC",1])
GCGC_probe_TCGA_blood$tag <- rep("TCGA_blood",nrow(GCGC_probe_TCGA_blood))
View(GCGC_probe_GSE)
View(GCGC_probe_GSE_blood)
View(GCGC_probe_GSE_blood)
colnames(GCGC_probe_GSE)=colnames(GCGC_probe_GSE_blood)=
colnames(GCGC_probe_GSE_blood)=colnames(GCGC_probe_TCGA_blood)=
c("probe","from")
View(GCGC_probe_GSE)
View(GCGC_probe_GSE_blood)
View(GCGC_probe_TCGA)
colnames(GCGC_probe_GSE)=colnames(GCGC_probe_TCGA)=
colnames(GCGC_probe_GSE_blood)=colnames(GCGC_probe_TCGA_blood)=
c("probe","from")
View(GCGC_probe_GSE)
View(GCGC_probe_GSE_blood)
View(GCGC_probe_TCGA)
View(GCGC_probe_TCGA_blood)
all_probe <- rbind(GCGC_probe_GSE,GCGC_probe_TCGA,GCGC_probe_GSE_blood,
GCGC_probe_TCGA_blood)
View(all_probe)
View(all_probe)
getwd()
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
write.xlsx(all_probe,file = "0-all-GCGC-probe.xlsx",rowNames=F,
colNames=T)
View(all_probe)
table(all_probe)
all_probe2 <- as.data.frame(table(all_probe))
View(all_probe2)
table(all_probe)
all_probe2 <- table(all_probe)
all_probe2
all_probe2 <- as.matrix(table(all_probe))
all_probe2 <- as.data.frame(as.matrix(table(all_probe)))
View(all_probe2)
table(all_probe)
library(reshape2)
all_probe2 <- dcast(all_probe)
all_probe2 <- acast(all_probe)
?dcast
colnames(all_probe)
all_probe2 <- dcast(all_probe,probe ~ from)
View(all_probe2)
length(unique(all_probe$probe))
all_probe2 <- acast(all_probe,probe ~ from)
View(all_probe2)
all_probe2 <- dcast(all_probe,probe ~ from)
View(all_probe2)
all_probe2$from <- paste0(all_probe2$GSE,all_probe2$GSE_blood,
all_probe2$TCGA,all_probe2$TCGA_blood)
View(all_probe2)
c(NA,1,2,3)
na.omit(c(NA,1,2,3))
all_probe2$from <- paste0(na.omit(all_probe2$GSE,all_probe2$GSE_blood,
all_probe2$TCGA,all_probe2$TCGA_blood))
View(all_probe2)
View(all_probe2)
all_probe2$from <- apply(all_probe2[,2:5],1,function(x){
paste(x[!is.na(x)], collapse = ",")
})
View(all_probe2)
all_probe2 <- all_probe2[,-c(2:5)]
View(all_probe2)
View(all_probe2)
hg19_probe <- read.table("probe.txt",header = T,sep = "\t")
View(hg19_probe)
all_probe3 <- merge(all_probe2,hg19_probe,by.x="probe",
by.y="id",all.x=T)
View(all_probe3)
devtools::install_github("PhanstielLab/bedtoolsr")
library(bedtoolsr)
?bt.closest
View(all_probe3)
all_probe3 <- all_probe3[,c(3,4,5,1,2)]
View(all_probe3)
hg19_GCGC <- data.table::fread("hg19.GCGC.probe.gene.anno.txt",
header = T,sep="\t")
View(hg19_GCGC)
hg19_GCGC_tmp <- hg19_GCGC[,c(1:3)]
out <- bt.closest(a = all_probe3,b = hg19_GCGC,k = 1,
D = "ref",iu = "upstream")
out <- bt.closest(a = all_probe3,b = hg19_GCGC,k = 1,
D = "ref",iu = T)
out <- bt.closest(a = all_probe3,b = hg19_GCGC,k = 1,
D = T,iu = T)
out <- bt.closest(a = all_probe3,b = hg19_GCGC,k = 1,
D = "ref",iu = TRUE)
View(all_probe3)
write.table(all_probe3,file = "public_GCGC_probe.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
write.table(all_probe3,file = "public_data_select_GCGC_probe.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
file <- "public_data_select_GCGC_probe.txt" ## 文件必须为txt后缀,染色体必须加chr
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
all_probe4 <- all_probe3
all_probe4$chr <- paste0("chr",all_probe4$chr)
write.table(all_probe4,file = "public_data_select_GCGC_probe2.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
View(all_probe4)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
View(all_probe4)
file <- "public_data_select_GCGC_probe2.txt" ## 文件必须为txt后缀,染色体必须加chr
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp <- as.data.frame(Anno@anno)
View(tmp)
tmp <- tmp[,-c(4,5)]
colnames(tmp)[1:3] <- c("chr","start","end")
tmp$chr <- gsub("chr","",tmp$chr)
write.table(tmp,file = "public_data_select_GCGC_probe_gene_anno.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
View(GCGC_anno)
hg19_GCGC <- data.table::fread("hg19.GCGC.probe.gene.anno.txt",
header = T,sep = "\t")
colnames(all_probe3)
colnames(all_probe3)[1:3] <- c("probe_chr","probe_start","probe_end")
colnames(hg19_GCGC)
all_probe4 <- merge(all_probe3,hg19_GCGC,by.x="probe",
by.y="probe",all.x=T)
View(all_probe4)
all_probe4 <- all_probe4[,-c(2,3,4)]
colnames(all_probe4)
all_probe4 <- all_probe4[,c(3:5,1,6:8,2,9:ncol(all_probe4))]
colnames(all_probe4)
colnames(all_probe4)[5:7] <- c("probe_chr","probe_start","probe_end")
colnames(all_probe4)
write.table(all_probe4,file = "public_data_GCGC_probe_anno.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(openxlsx)
library(data.table)
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
file <- "hg19.GCGC.merge.tmp.txt"
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
file <- "hg19.GCGC.merge.tmp.txt"
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
file <- "hg19.GCGC.merge.tmp.txt"
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp <- as.data.frame(Anno@anno)
write.table(tmp,file = "hg19.GCGC.merge.gene.anno.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
file <- "hg19.GCGC.merge.tmp.txt"
Anno <- annotatePeak(file, tssRegion=c(-3000, 3000),
TxDb=txdb,annoDb="org.Hs.eg.db")
tmp <- as.data.frame(Anno@anno)
write.table(tmp,file = "hg19.GCGC.merge.gene.anno.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
library(openxlsx)
library(data.table)
path <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\gene_multiple_GCGC\\"
setwd(path)
path_GSE <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\tissue_GSE131013_450K\\"
path_TCGA <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\tissue_TCGA_450K\\"
path_TCGA_blood <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\blood_N_TCGA_T\\"
path_GSE_blood <- "E:/0-泛生子/工作/结直肠癌早筛/Data_Analysis/DNA_methylation/maker_re_select/public_data/blood_N_GSE_T/"
annotation_file <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\450k_annotation\\450k.GCGC.primer_tag.txt"
anno_file_noGCGC <- "E:\\0-泛生子\\工作\\结直肠癌早筛\\Data_Analysis\\DNA_methylation\\maker_re_select\\public_data\\450k_annotation\\450k.noGCGC.primer_tag.txt"
GCGC_anno <- as.data.frame(fread(annotation_file,header = T,sep = "\t"))
noGCGC_anno <- as.data.frame(fread(anno_file_noGCGC,header = T,sep = "\t"))
data1 <- as.data.frame(fread(paste0(path_GSE,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
data2 <- as.data.frame(fread(paste0(path_TCGA,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
data3 <- as.data.frame(fread(paste0(path_GSE_blood,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
data4 <- as.data.frame(fread(paste0(path_TCGA_blood,"3-diff_data_use_all_final.txt"),
header = T,sep = "\t"))
GCGC_probe_GSE <- as.data.frame(data1[data1$GCGC_tag=="GCGC",1])
GCGC_probe_GSE$tag <- rep("GSE",nrow(GCGC_probe_GSE))
GCGC_probe_TCGA <- as.data.frame(data2[data2$GCGC_tag=="GCGC",1])
GCGC_probe_TCGA$tag <- rep("TCGA",nrow(GCGC_probe_TCGA))
GCGC_probe_GSE_blood <- as.data.frame(data3[data3$GCGC_tag=="GCGC",1])
GCGC_probe_GSE_blood$tag <- rep("GSE_blood",nrow(GCGC_probe_GSE_blood))
GCGC_probe_TCGA_blood <- as.data.frame(data4[data4$GCGC_tag=="GCGC",1])
GCGC_probe_TCGA_blood$tag <- rep("TCGA_blood",nrow(GCGC_probe_TCGA_blood))
colnames(GCGC_probe_GSE)=colnames(GCGC_probe_TCGA)=
colnames(GCGC_probe_GSE_blood)=colnames(GCGC_probe_TCGA_blood)=
c("probe","from")
all_probe <- rbind(GCGC_probe_GSE,GCGC_probe_TCGA,GCGC_probe_GSE_blood,
GCGC_probe_TCGA_blood)
library(reshape2)
all_probe2 <- dcast(all_probe,probe ~ from)
all_probe2$from <- apply(all_probe2[,2:5],1,function(x){
paste(x[!is.na(x)], collapse = ",")
})
all_probe2 <- all_probe2[,-c(2:5)]
hg19_probe <- read.table("probe.txt",header = T,sep = "\t")
View(all_probe2)
hg19_probe <- read.table("probe.txt",header = T,sep = "\t")
all_probe3 <- merge(all_probe2,hg19_probe,by.x="probe",
by.y="id",all.x=T)
all_probe3 <- all_probe3[,c(3,4,5,1,2)]
colnames(all_probe3)[1:3] <- c("probe_chr","probe_start","probe_end")
hg19_GCGC <- data.table::fread("hg19.GCGC.probe.gene.anno.txt",
header = T,sep = "\t")
hg19_probe <- read.table("probe.txt",header = T,sep = "\t")
all_probe3 <- merge(all_probe2,hg19_probe,by.x="probe",
by.y="id",all.x=T)
View(all_probe2)
View(hg19_probe)
hg19_probe <- read.table("probe.txt",header = F,sep = "\t")
View(hg19_probe)
colnames(hg19_probe) <- c("chr","start","end","probe")
all_probe3 <- merge(all_probe2,hg19_probe,by.x="probe",
by.y="probe",all.x=T)
View(all_probe3)
all_probe3 <- all_probe3[,c(3,4,5,1,2)]
View(all_probe3)
colnames(all_probe3)[1:3] <- c("probe_chr","probe_start","probe_end")
View(all_probe3)
write.table(all_probe3,file = "public_data_GCGC_probe.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
hg19_GCGC <- data.table::fread("hg19.GCGC.merge.probe.annotation.txt",
header = T,sep = "\t")
View(hg19_GCGC)
all_probe4 <- merge(all_probe3,hg19_GCGC,
by=c("probe_chr","probe_start","probe_end","probe"),
all.x=T)
View(all_probe4)
all_probe4 <- all_probe4[,-c(21:28)]
View(all_probe4)
write.table(all_probe4,file = "public_data_GCGC_probe_anno.txt",
row.names = F,col.names = T,sep = "\t",quote = F)
2253-715
library("clusterProfiler")
library("org.Hs.eg.db")
library("enrichplot")
library("ggplot2")
cancer <- "HNSC"
pvalueFilter=0.05         #p值过滤条件
qvalueFilter=0.05         #矫正后的p值过滤条件
path <- "E:\\Training\\12-topic-data-analysis\\"
rt=read.table(paste0(path,cancer,"\\3-exp_GO_KEGG\\","id_diff.txt"),
sep="\t",header=T,check.names=F)
library(stringr)
splitEnsembl <- function(Ensembl){
return(str_split(Ensembl,'[.]',simplify = T)[1])
}
rt$Ensembl <- sapply(rt$id,splitEnsembl,simplify = T)
library(AnnotationDbi)
library(org.Hs.eg.db)
rt$EntrezID1 <- mapIds(org.Hs.eg.db,keys = rt$name,
column = 'ENTREZID',
keytype = 'SYMBOL',
multiVals = 'first')
rt$EntrezID2 <- mapIds(org.Hs.eg.db,keys = rt$Ensembl,
column = 'ENTREZID',
keytype = 'ENSEMBL',
multiVals = 'first')
rt$EntrezID <- ifelse(is.na(rt$EntrezID1),rt$EntrezID2,rt$EntrezID1)
rt=rt[is.na(rt[,"EntrezID"])==F,]
gene=rt$EntrezID
geneFC=2^rt$logFC
names(geneFC)=gene
setwd(paste0(path,cancer,"\\3-exp_GO_KEGG\\"))
kk=enrichGO(gene = gene,OrgDb = org.Hs.eg.db,
pvalueCutoff =1, qvalueCutoff = 1,
ont="all", readable =T) #设置数据库类型、阈值、富集类型
GO=as.data.frame(kk)
GO=GO[GO$pvalue<pvalueFilter,]
GO_BP <- GO[1:10,]
library(ggplot2)
ggplot(data=GO_BP, aes(x=Count, y=Description,fill=pvalue)) +
geom_bar(stat="identity", width=0.8) +
theme_test() +
xlab("gene number") +
theme(axis.text=element_text(face = "bold", color="gray50")) +
labs(title = "Top 10 GO Terms")
ggplot(GO_BP,aes(pvalue,Description))+
geom_point(aes(size=Count,color=-1*log10(pvalue)))+
scale_color_gradient(low="green",high = "red")+ #设置渐变色
labs(color=expression(-log[10](pvalue)),size="Count",
x="pvalue",y="GO name",title="Top 10 GO terms")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90))
kk2 <- enrichKEGG(gene = gene, organism = "hsa", pvalueCutoff =1, qvalueCutoff =1)
KEGG=as.data.frame(kk2)
KEGG=KEGG[KEGG$pvalue<pvalueFilter,]
ggplot(KEGG,aes(pvalue,Description))+
geom_point(aes(size=Count,color=-1*log10(pvalue)))+
scale_color_gradient(low="green",high = "red")+ #设置渐变色
labs(color=expression(-log[10](pvalue)),size="Count",
x="pvalue",y="Pathway name",title="KEGG Pathway enrichment")+
theme_bw()
library(limma) ##avereps函数
library(estimate)
library(data.table)
cancer <- "HNSC"
path <- "E:\\Training\\12-topic-data-analysis\\"
inputFile=paste0(path,cancer,"\\1-data\\",cancer,"_FPKM.txt")
sample_group <- read.table(paste0(path,cancer,"\\1-data\\",cancer,"_FPKM_group.txt"),
sep = "\t",header = T)
data=as.matrix(fread(inputFile,sep="\t",header=T,check.names=F))
rownames(data)=as.character(data[,2])
exp=data[,3:ncol(data)]
dimnames=list(rownames(exp),colnames(exp))
data=matrix(as.numeric(as.matrix(exp)),nrow=nrow(exp),dimnames=dimnames)
data=avereps(data) ## 对同一个基因多行的数据，取均值
out=data[rowMeans(data)>0,] # 过滤表达值低的基因(所有样本中全为0的基因)
setwd(paste0(path,cancer,"\\4-imm\\"))
filterCommonGenes(input.f="uniq.symbol.txt",
output.f="commonGenes.gct",
id="GeneSymbol")
estimateScore(input.ds = "commonGenes.gct",
output.ds="estimateScore.gct",
platform="illumina")
scores=read.table("estimateScore.gct",skip = 2,header = T)
rownames(scores)=scores[,1]
scores=t(scores[,3:ncol(scores)])
rownames(scores)=gsub("\\.","\\-",rownames(scores))
scores <- cbind(rownames(scores),scores)
colnames(scores) <- c("sample","StromalScore","ImmuneScore","ESTIMATEScore")
out <- merge(scores,sample_group[,c(1,7)],by.x="sample",by.y="sample_barcode",
all.x=T)
wilcox.test(as.numeric(out[out$group=="ecDNA -",2]),
as.numeric(out[out$group=="ecDNA +",2]))
boxplot(as.numeric(out[out$group=="ecDNA -",2]),
as.numeric(out[out$group=="ecDNA +",2]),
names=c("ecDNA -","ecDNA +"),
col=c("blue","red"),
pch=20,
main="StromalScore")
wilcox.test(as.numeric(out[out$group=="ecDNA -",3]),
as.numeric(out[out$group=="ecDNA +",3]))
boxplot(as.numeric(out[out$group=="ecDNA -",3]),
as.numeric(out[out$group=="ecDNA +",3]),
names=c("ecDNA -","ecDNA +"),
col=c("blue","red"),
pch=20,
main="ImmuneScore")
View(out)
colnames(out)
wilcox.test(as.numeric(out[out$group=="ecDNA -",4]),
as.numeric(out[out$group=="ecDNA +",4]))
0.05>0.08
